// Generated by gencpp from file costmap_prohibition_layer/AddProhibitedPoints.msg
// DO NOT EDIT!


#ifndef COSTMAP_PROHIBITION_LAYER_MESSAGE_ADDPROHIBITEDPOINTS_H
#define COSTMAP_PROHIBITION_LAYER_MESSAGE_ADDPROHIBITEDPOINTS_H

#include <ros/service_traits.h>


#include <costmap_prohibition_layer/AddProhibitedPointsRequest.h>
#include <costmap_prohibition_layer/AddProhibitedPointsResponse.h>


namespace costmap_prohibition_layer
{

struct AddProhibitedPoints
{

typedef AddProhibitedPointsRequest Request;
typedef AddProhibitedPointsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AddProhibitedPoints
} // namespace costmap_prohibition_layer


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::costmap_prohibition_layer::AddProhibitedPoints > {
  static const char* value()
  {
    return "d58bd181a40e77cd6f8dfb61f5bc4f85";
  }

  static const char* value(const ::costmap_prohibition_layer::AddProhibitedPoints&) { return value(); }
};

template<>
struct DataType< ::costmap_prohibition_layer::AddProhibitedPoints > {
  static const char* value()
  {
    return "costmap_prohibition_layer/AddProhibitedPoints";
  }

  static const char* value(const ::costmap_prohibition_layer::AddProhibitedPoints&) { return value(); }
};


// service_traits::MD5Sum< ::costmap_prohibition_layer::AddProhibitedPointsRequest> should match
// service_traits::MD5Sum< ::costmap_prohibition_layer::AddProhibitedPoints >
template<>
struct MD5Sum< ::costmap_prohibition_layer::AddProhibitedPointsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::costmap_prohibition_layer::AddProhibitedPoints >::value();
  }
  static const char* value(const ::costmap_prohibition_layer::AddProhibitedPointsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::costmap_prohibition_layer::AddProhibitedPointsRequest> should match
// service_traits::DataType< ::costmap_prohibition_layer::AddProhibitedPoints >
template<>
struct DataType< ::costmap_prohibition_layer::AddProhibitedPointsRequest>
{
  static const char* value()
  {
    return DataType< ::costmap_prohibition_layer::AddProhibitedPoints >::value();
  }
  static const char* value(const ::costmap_prohibition_layer::AddProhibitedPointsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::costmap_prohibition_layer::AddProhibitedPointsResponse> should match
// service_traits::MD5Sum< ::costmap_prohibition_layer::AddProhibitedPoints >
template<>
struct MD5Sum< ::costmap_prohibition_layer::AddProhibitedPointsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::costmap_prohibition_layer::AddProhibitedPoints >::value();
  }
  static const char* value(const ::costmap_prohibition_layer::AddProhibitedPointsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::costmap_prohibition_layer::AddProhibitedPointsResponse> should match
// service_traits::DataType< ::costmap_prohibition_layer::AddProhibitedPoints >
template<>
struct DataType< ::costmap_prohibition_layer::AddProhibitedPointsResponse>
{
  static const char* value()
  {
    return DataType< ::costmap_prohibition_layer::AddProhibitedPoints >::value();
  }
  static const char* value(const ::costmap_prohibition_layer::AddProhibitedPointsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COSTMAP_PROHIBITION_LAYER_MESSAGE_ADDPROHIBITEDPOINTS_H
