; Auto-generated. Do not edit!


(cl:in-package robotnik_navigation_msgs-msg)


;//! \htmlinclude RobotnikMoveBaseFlexResult.msg.html

(cl:defclass <RobotnikMoveBaseFlexResult> (roslisp-msg-protocol:ros-message)
  ((result
    :reader result
    :initarg :result
    :type robotnik_navigation_msgs-msg:RobotnikMoveBaseFlexResultAction
    :initform (cl:make-instance 'robotnik_navigation_msgs-msg:RobotnikMoveBaseFlexResultAction)))
)

(cl:defclass RobotnikMoveBaseFlexResult (<RobotnikMoveBaseFlexResult>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <RobotnikMoveBaseFlexResult>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'RobotnikMoveBaseFlexResult)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name robotnik_navigation_msgs-msg:<RobotnikMoveBaseFlexResult> is deprecated: use robotnik_navigation_msgs-msg:RobotnikMoveBaseFlexResult instead.")))

(cl:ensure-generic-function 'result-val :lambda-list '(m))
(cl:defmethod result-val ((m <RobotnikMoveBaseFlexResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader robotnik_navigation_msgs-msg:result-val is deprecated.  Use robotnik_navigation_msgs-msg:result instead.")
  (result m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <RobotnikMoveBaseFlexResult>) ostream)
  "Serializes a message object of type '<RobotnikMoveBaseFlexResult>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'result) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <RobotnikMoveBaseFlexResult>) istream)
  "Deserializes a message object of type '<RobotnikMoveBaseFlexResult>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'result) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<RobotnikMoveBaseFlexResult>)))
  "Returns string type for a message object of type '<RobotnikMoveBaseFlexResult>"
  "robotnik_navigation_msgs/RobotnikMoveBaseFlexResult")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'RobotnikMoveBaseFlexResult)))
  "Returns string type for a message object of type 'RobotnikMoveBaseFlexResult"
  "robotnik_navigation_msgs/RobotnikMoveBaseFlexResult")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<RobotnikMoveBaseFlexResult>)))
  "Returns md5sum for a message object of type '<RobotnikMoveBaseFlexResult>"
  "784f766feb197537da015662e8bdd3c8")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'RobotnikMoveBaseFlexResult)))
  "Returns md5sum for a message object of type 'RobotnikMoveBaseFlexResult"
  "784f766feb197537da015662e8bdd3c8")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<RobotnikMoveBaseFlexResult>)))
  "Returns full string definition for message of type '<RobotnikMoveBaseFlexResult>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%robotnik_navigation_msgs/RobotnikMoveBaseFlexResultAction result~%~%================================================================================~%MSG: robotnik_navigation_msgs/RobotnikMoveBaseFlexResultAction~%~%# Outcome of most recent controller cycle. Same values as in MoveBase or ExePath result.~%uint32 outcome~%string message~%~%float32 dist_to_goal~%float32 angle_to_goal~%geometry_msgs/PoseStamped current_pose~%bool success~%geometry_msgs/TwistStamped last_cmd_vel  # last command calculated by the controller~%~%================================================================================~%MSG: geometry_msgs/PoseStamped~%# A Pose with reference coordinate frame and timestamp~%Header header~%Pose pose~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: geometry_msgs/TwistStamped~%# A twist with reference coordinate frame and timestamp~%Header header~%Twist twist~%~%================================================================================~%MSG: geometry_msgs/Twist~%# This expresses velocity in free space broken into its linear and angular parts.~%Vector3  linear~%Vector3  angular~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'RobotnikMoveBaseFlexResult)))
  "Returns full string definition for message of type 'RobotnikMoveBaseFlexResult"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%robotnik_navigation_msgs/RobotnikMoveBaseFlexResultAction result~%~%================================================================================~%MSG: robotnik_navigation_msgs/RobotnikMoveBaseFlexResultAction~%~%# Outcome of most recent controller cycle. Same values as in MoveBase or ExePath result.~%uint32 outcome~%string message~%~%float32 dist_to_goal~%float32 angle_to_goal~%geometry_msgs/PoseStamped current_pose~%bool success~%geometry_msgs/TwistStamped last_cmd_vel  # last command calculated by the controller~%~%================================================================================~%MSG: geometry_msgs/PoseStamped~%# A Pose with reference coordinate frame and timestamp~%Header header~%Pose pose~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: geometry_msgs/TwistStamped~%# A twist with reference coordinate frame and timestamp~%Header header~%Twist twist~%~%================================================================================~%MSG: geometry_msgs/Twist~%# This expresses velocity in free space broken into its linear and angular parts.~%Vector3  linear~%Vector3  angular~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <RobotnikMoveBaseFlexResult>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'result))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <RobotnikMoveBaseFlexResult>))
  "Converts a ROS message object to a list"
  (cl:list 'RobotnikMoveBaseFlexResult
    (cl:cons ':result (result msg))
))
