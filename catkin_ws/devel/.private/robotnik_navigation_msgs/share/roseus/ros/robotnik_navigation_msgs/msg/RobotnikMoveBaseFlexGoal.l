;; Auto-generated. Do not edit!


(when (boundp 'robotnik_navigation_msgs::RobotnikMoveBaseFlexGoal)
  (if (not (find-package "ROBOTNIK_NAVIGATION_MSGS"))
    (make-package "ROBOTNIK_NAVIGATION_MSGS"))
  (shadow 'RobotnikMoveBaseFlexGoal (find-package "ROBOTNIK_NAVIGATION_MSGS")))
(unless (find-package "ROBOTNIK_NAVIGATION_MSGS::ROBOTNIKMOVEBASEFLEXGOAL")
  (make-package "ROBOTNIK_NAVIGATION_MSGS::ROBOTNIKMOVEBASEFLEXGOAL"))

(in-package "ROS")
;;//! \htmlinclude RobotnikMoveBaseFlexGoal.msg.html


(defclass robotnik_navigation_msgs::RobotnikMoveBaseFlexGoal
  :super ros::object
  :slots (_goal ))

(defmethod robotnik_navigation_msgs::RobotnikMoveBaseFlexGoal
  (:init
   (&key
    ((:goal __goal) (instance robotnik_navigation_msgs::RobotnikMoveBaseFlexGoalAction :init))
    )
   (send-super :init)
   (setq _goal __goal)
   self)
  (:goal
   (&rest __goal)
   (if (keywordp (car __goal))
       (send* _goal __goal)
     (progn
       (if __goal (setq _goal (car __goal)))
       _goal)))
  (:serialization-length
   ()
   (+
    ;; robotnik_navigation_msgs/RobotnikMoveBaseFlexGoalAction _goal
    (send _goal :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; robotnik_navigation_msgs/RobotnikMoveBaseFlexGoalAction _goal
       (send _goal :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; robotnik_navigation_msgs/RobotnikMoveBaseFlexGoalAction _goal
     (send _goal :deserialize buf ptr-) (incf ptr- (send _goal :serialization-length))
   ;;
   self)
  )

(setf (get robotnik_navigation_msgs::RobotnikMoveBaseFlexGoal :md5sum-) "2c383b2a93e82f0a6eee475527802b3d")
(setf (get robotnik_navigation_msgs::RobotnikMoveBaseFlexGoal :datatype-) "robotnik_navigation_msgs/RobotnikMoveBaseFlexGoal")
(setf (get robotnik_navigation_msgs::RobotnikMoveBaseFlexGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
robotnik_navigation_msgs/RobotnikMoveBaseFlexGoalAction goal

================================================================================
MSG: robotnik_navigation_msgs/RobotnikMoveBaseFlexGoalAction
string NAVIGATION_TYPE_POINT_TO_POINT = POINT_TO_POINT
string NAVIGATION_TYPE_END_POINT= END_POINT

string GOAL_TARGET_TYPE_GPS = GPS
string GOAL_TARGET_TYPE_CARTESIAN = CARTESIAN

geometry_msgs/PoseStamped[] goal_target_pose
string[] controller
string[] planner
string[] recovery_behaviors
geometry_msgs/Pose[] goal_tolerance
string navigation_type
string goal_target_type
float32 max_vel

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :robotnik_navigation_msgs/RobotnikMoveBaseFlexGoal "2c383b2a93e82f0a6eee475527802b3d")


